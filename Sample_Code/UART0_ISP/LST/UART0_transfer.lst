C51 COMPILER V9.53.0.0   UART0_TRANSFER                                                    07/10/2018 08:25:23 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE UART0_TRANSFER
OBJECT MODULE PLACED IN .\Output\UART0_transfer.obj
COMPILER INVOKED BY: E:\Soft\keil472a\C51\BIN\C51.EXE Source\UART0_transfer.c OMF2 ROM(COMPACT) OPTIMIZE(1,SPEED) BROWSE
                    - INCDIR(..\..\Include) DEBUG PRINT(.\LST\UART0_transfer.lst) OBJECT(.\Output\UART0_transfer.obj)

line level    source

   1          /*--------------------------------------------------------------------------------------------------------
             --*/
   2          /*                                                                                                        
             - */
   3          /* Copyright(c) 2015 Nuvoton Technology Corp. All rights reserved.                                        
             - */
   4          /*                                                                                                        
             - */
   5          /*--------------------------------------------------------------------------------------------------------
             --*/
   6          
   7          //********************************************************************************************************
             -***
   8          //  Nuvoton Technoledge Corp. 
   9          //  Website: http://www.nuvoton.com
  10          //  E-Mail : MicroC-8bit@nuvoton.com
  11          //  Date   : Apr/21/2015
  12          //********************************************************************************************************
             -***
  13          
  14          //********************************************************************************************************
             -***
  15          //  File Function: N76E885 UART-0 Mode2 demo code
  16          //********************************************************************************************************
             -***
  17          
  18          #include <stdio.h>
  19          #include "N76E003.h"
  20          #include "Typedef.h"
  21          #include "Define.h"
  22          #include "SFR_Macro.h"
  23          #include "UART0_transfer.h"
  24          #include "ISP_USER.h"
  25          
  26          xdata volatile uint8_t uart_rcvbuf[UartBufSize+2]; 
  27          xdata volatile uint8_t uart_txbuf[8];
  28          data volatile uint8_t bufhead;
  29          data volatile uint16_t flash_address; 
  30          data volatile uint16_t AP_size;
  31          data volatile uint8_t g_timer1Counter;
  32          data volatile uint8_t count; 
  33          data volatile uint16_t g_timer0Counter;
  34          
  35          
  36          bit volatile bUartDataReady;
  37          bit volatile g_timer0Over;
  38          bit volatile g_timer1Over;
  39          bit volatile g_progarmflag;
  40          
  41          bit BIT_TMP;
  42          
  43          
  44          void TM0_ini(void)
  45          {               
C51 COMPILER V9.53.0.0   UART0_TRANSFER                                                    07/10/2018 08:25:23 PAGE 2   

  46   1              TH0=TL0=0;              //interrupt timer 140us
  47   1              set_TR0;                        //Start timer0
  48   1              set_PSH;                // Serial port 0 interrupt level2
  49   1              IE = 0x92;              //EA=1, ES=1,ET0=1
  50   1      }
  51          
  52          
  53          void UART0_ini_115200(void)
  54          {
  55   1      
  56   1          SCON = 0x52;     //UART0 Mode1,REN=1,TI=1
  57   1          TMOD |= 0x22;    //Timer1 Mode1, TIMER 0 MODE2      
  58   1          set_SMOD;
  59   1          set_T1M;
  60   1          clr_BRCK;        //Serial port 0 baud rate clock source = Timer1
  61   1          TH1 = 256 - (1000000/115200+1);                                                                                             /*16 MHz to 115200 Baudrate*/\
  62   1          set_TR1;                                    //Start timer1
  63   1          ES=1;
  64   1          EA=1;
  65   1      }
  66          
  67          
  68          void Send_64byte_To_UART0(void)
  69          {
  70   1          uart_txbuf[0]=uart_rcvbuf[0];
  71   1              uart_txbuf[1]=uart_rcvbuf[1]+1;
  72   1          uart_txbuf[7]=0;
  73   1          for(count=0;count<8;count++)
  74   1          {
  75   2          TI = 0;     
  76   2          SBUF = uart_txbuf[count];
  77   2          uart_txbuf[7]+=uart_txbuf[count];
  78   2          while(TI==0);
  79   2          }
  80   1      }
  81          void Send_Error_To_UART0(void)
  82          {
  83   1          for(count=0;count<8;count++)
  84   1          {
  85   2          TI = 0;     
  86   2          SBUF =0xff;
  87   2          while(TI==0);
  88   2          }
  89   1      }
  90          void Serial_ISR (void) interrupt 4 
  91          {
  92   1          if (RI == 1)
  93   1          {   
  94   2                              uart_rcvbuf[bufhead++]= SBUF;           
  95   2                              clr_RI; 
  96   2          }
  97   1          if (TI == 1)
  98   1          {       
  99   2              clr_TI;                                         
 100   2          }
 101   1                      if(bufhead ==1)
 102   1                      {
 103   2                              g_timer1Over=0;
 104   2                              g_timer1Counter=90; //for check uart timeout using
 105   2                      }
 106   1              if(bufhead == UartBufSize)
 107   1                      {
C51 COMPILER V9.53.0.0   UART0_TRANSFER                                                    07/10/2018 08:25:23 PAGE 3   

 108   2                              
 109   2                              bUartDataReady = 1;
 110   2                              g_timer1Counter=0;
 111   2                              g_timer1Over=0;
 112   2                              bufhead = 0;
 113   2                      }               
 114   1      }
 115          
 116          void Timer0_ISR (void) interrupt 1
 117          {
 118   1      if(g_timer0Counter)
 119   1        {
 120   2              g_timer0Counter--;
 121   2                      if(!g_timer0Counter)
 122   2                      {
 123   3                      g_timer0Over=1;
 124   3                      }
 125   2              }
 126   1              
 127   1              if(g_timer1Counter)
 128   1        {
 129   2              g_timer1Counter--;
 130   2                      if(!g_timer1Counter)
 131   2                      {
 132   3                      g_timer1Over=1;
 133   3                      }
 134   2              }
 135   1      } 


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    268    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =    160    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      9    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      5    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
